codes = {'L': 'local', 'C': 'connected', 'S': 'static', 'R': 'RIP', 'M': 'mobile', 'B': 'BGP', 'D': 'EIGRP', 'EX': 'EIGRP external', 'O': 'OSPF','IA': 'OSPF inter area', 'N1': 'OSPF NSSA external type 1', 'N2': 'OSPF NSSA external type 2', 'E1': 'OSPF external type 1', 'E2': 'OSPF external type 2', 'E': 'EGP', 'i': 'IS-IS', 'su': 'IS-IS summary', 'L1': 'IS-IS level-1', 'L2': 'IS-IS level-2', 'ia': 'IS-IS inter area','*': 'candidate default', 'U': 'per-user static route', 'o': 'ODR', 'P': 'periodic downloaded static route', 'H': 'NHRP', 'l': 'LISP', 'a': 'application route'}

template ="""Protocol: {0}
Prefix: {1}
AD/Metric: {2}
Next-Hop: {3}
Last update: {4}
Outbound interface: {5}"""


def parse_data(context):
	context = context.split('\n')[2:]
	if context[0].startswith('Gateway '):
		context.pop(0)
	result = []
	for i in context:
		if 'via' in i:
			i = i.replace(',', '').replace('[', '').replace(']', '').replace('via', '').split()
			if len(i) == 7:
				i[0] = '{0}, {1}'.format(codes[i[0]], codes[i.pop(1)])
			else:
				i[0] = codes[i[0]]
			result.append(i)
	return result

def main():
	file = open('ShowIpRoute.txt').read()
	data = parse_data(file)
	for i in data:
		print(template.format(*i))

main()
